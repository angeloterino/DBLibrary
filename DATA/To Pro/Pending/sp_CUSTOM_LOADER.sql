USE [godzilla]
GO

/****** Object:  StoredProcedure [dbo].[sp_CUSTOM_LOADER]    Script Date: 10/9/2016 5:21:31 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO





-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[sp_CUSTOM_LOADER]
	-- Add the parameters for the stored procedure here
	@TRANSACTION_ID INT,
	@USER nvarchar(255)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		DECLARE
		@YEAR_PERIOD INT, 
		@MONTH_PERIOD INT,
		@CHANNEL numeric(18,0),
		@MARKET numeric(18,0),
		@BRAND numeric(18,0),
		@GROUP numeric(18,0),
		@MONTH numeric(38,2),
		@MAT numeric(38,2),
		@YTD numeric(38,2),
		@TOTAL numeric(38,2),
		@DATA nvarchar(255),
		@SOURCE nvarchar(255),
		@DESCRIPTION nvarchar(255),
		@MONTH_AMOUNT_ACTUAL decimal(18,2),
		@YTD_AMOUNT_ACTUAL decimal(18,2),
		@NTS_CFG numeric(18,0),
		@WC nvarchar(255),
		@SB nvarchar(255),
		@LAST_DATE datetime,
		@counter numeric(18,0),
		@PROCEDURE nvarchar(255) = 'IMS/Nielsen Data',
		@MESSAGE nvarchar(255),
		@TMP_TRANSACTION numeric(18,0) = 0,
		@STATUS nvarchar(255) = 'Success',
		@MAX numeric(18,0) = 0,
		@YEAR_TMP numeric(18,0) = 0,
		@MONTH_COUNTER numeric(18,0) = 0
	;	
	DECLARE @TMP_TABLE AS TABLE (
		YEAR_PERIOD numeric(18,0),
		MONTH_PERIOD numeric(18,0),
		TRANSACTION_ID numeric(18,0)
	);
	DECLARE CM CURSOR LOCAL FOR
		SELECT DATA, SOURCE, DESCRIPTION, MARKET, [GROUP],[YEAR PERIOD], [MONTH PERIOD], TOTAL, [MONTH], YTD,MAT,WC,SB,TRANSACTION_ID,[USER],[LAST DATE]
		 FROM dbo.STRWM_MARKET_DATA_BCK
		 WHERE TRANSACTION_ID = @TRANSACTION_ID
		 ORDER BY TRANSACTION_ID
	;
	DECLARE CB CURSOR LOCAL FOR
		SELECT DATA, SOURCE, DESCRIPTION, MARKET, BRAND,[GROUP], [YEAR PERIOD], [MONTH PERIOD], TOTAL, [MONTH], YTD,MAT,WC,SB,TRANSACTION_ID,[USER],[LAST DATE]
		 FROM dbo.STRWM_BRAND_DATA_BCK
		 WHERE TRANSACTION_ID = @TRANSACTION_ID
		 ORDER BY TRANSACTION_ID
	;
	DECLARE PER CURSOR LOCAL FOR
		SELECT YEAR_PERIOD, MONTH_PERIOD, TRANSACTION_ID FROM @TMP_TABLE ORDER BY TRANSACTION_ID, MONTH_PERIOD, YEAR_PERIOD
		;
    -- Insert statements for procedure here
	BEGIN TRY
		SET @MESSAGE = 'Init procedure';
		BEGIN TRANSACTION CUSTOM_L;
		--Datos Market
		OPEN CM;
		FETCH CM INTO @DATA, @SOURCE,@DESCRIPTION, @MARKET,@GROUP, @YEAR_PERIOD, @MONTH_PERIOD, @TOTAL,@MONTH,@YTD,@MAT,@WC,@SB,@TRANSACTION_ID,@USER,@LAST_DATE
		;
		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			SET @counter = 0;
			SELECT @counter = COUNT(1) FROM STRWM_MARKET_DATA WHERE MARKET = @MARKET AND [GROUP] = @GROUP AND [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			IF @counter>0
				UPDATE STRWM_MARKET_DATA SET TOTAL = @TOTAL, MAT = @MAT, YTD = @YTD, [MONTH] = @MONTH,[USER] = @USER, [LAST DATE] = @LAST_DATE, TRANSACTION_ID = @TRANSACTION_ID
				WHERE MARKET = @MARKET AND [GROUP] = @GROUP AND [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
				;
			
			ELSE
				INSERT INTO STRWM_MARKET_DATA (DATA, SOURCE, DESCRIPTION, MARKET, [GROUP], [YEAR PERIOD], [MONTH PERIOD], TOTAL, [MONTH], YTD,MAT,WC,SB,TRANSACTION_ID,[USER],[LAST DATE])
				VALUES
				(@DATA,@SOURCE,@DESCRIPTION,@MARKET,@GROUP,@YEAR_PERIOD,@MONTH_PERIOD,@TOTAL,@MONTH,@YTD,@MAT,@WC,@SB,@TRANSACTION_ID,@USER,CURRENT_TIMESTAMP)
			;
			--Actualizamos tabla temporal de periodos
			SELECT @counter = COUNT(1) FROM @TMP_TABLE WHERE YEAR_PERIOD = @YEAR_PERIOD AND MONTH_PERIOD = @MONTH_PERIOD
			;
			IF(@counter =0)
			BEGIN
				INSERT INTO @TMP_TABLE VALUES(@YEAR_PERIOD, @MONTH_PERIOD, @TRANSACTION_ID);
			END
			IF @TMP_TRANSACTION !=  @TRANSACTION_ID 
			BEGIN
				BEGIN TRANSACTION LOG_TRANS;
				INSERT INTO dbo.LOG_TABLE ([TRANSACTION ID],MESSAGE,[TYPE]) VALUES(@TRANSACTION_ID, '' + @PROCEDURE + ': Saved temporal data.','Success');
				COMMIT TRANSACTION LOG_TRANS;
				SET @TMP_TRANSACTION = @TRANSACTION_ID;
			END;

			FETCH CM INTO @DATA, @SOURCE, @DESCRIPTION, @MARKET,@GROUP, @YEAR_PERIOD,  @MONTH_PERIOD,@TOTAL,  @MONTH,@YTD,@MAT,@WC,@SB,@TRANSACTION_ID, @USER,@LAST_DATE 
			;			
		END
		CLOSE CM;
		--Datos Brand
		OPEN CB;
		FETCH CB INTO @DATA, @SOURCE,@DESCRIPTION, @MARKET,@BRAND,@GROUP, @YEAR_PERIOD, @MONTH_PERIOD, @TOTAL,@MONTH,@YTD,@MAT,@WC,@SB,@TRANSACTION_ID,@USER,@LAST_DATE
		;
		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			SET @counter = 0;
			SELECT @counter = COUNT(1) FROM STRWM_BRAND_DATA WHERE MARKET = @MARKET AND BRAND = @BRAND AND [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			IF @counter>0
				UPDATE STRWM_BRAND_DATA SET TOTAL = @TOTAL, MAT = @MAT, YTD = @YTD, [MONTH] = @MONTH,[USER] = @USER, [LAST DATE] = @LAST_DATE, TRANSACTION_ID = @TRANSACTION_ID
				WHERE MARKET = @MARKET AND BRAND = @BRAND AND [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
				;
			ELSE
				INSERT INTO STRWM_BRAND_DATA (DATA, SOURCE, DESCRIPTION, MARKET, BRAND, [GROUP],[YEAR PERIOD], [MONTH PERIOD], TOTAL, [MONTH], YTD,MAT,WC,SB,TRANSACTION_ID,[USER],[LAST DATE])
				VALUES
				(@DATA,@SOURCE,@DESCRIPTION,@MARKET,@BRAND,@GROUP,@YEAR_PERIOD,@MONTH_PERIOD,@TOTAL,@MONTH,@YTD,@MAT,@WC,@SB,@TRANSACTION_ID,@USER,CURRENT_TIMESTAMP)
			;
				--Actualizamos tabla temporal de periodos
				SELECT @counter = COUNT(1) FROM @TMP_TABLE WHERE YEAR_PERIOD = @YEAR_PERIOD AND MONTH_PERIOD = @MONTH_PERIOD AND TRANSACTION_ID = @TRANSACTION_ID
			;
			IF(@counter =0)
			BEGIN
				INSERT INTO @TMP_TABLE VALUES(@YEAR_PERIOD, @MONTH_PERIOD,@TRANSACTION_ID);
			END

			IF @TMP_TRANSACTION !=  @TRANSACTION_ID 
			BEGIN
				BEGIN TRANSACTION LOG_TRANS;
				INSERT INTO dbo.LOG_TABLE ([TRANSACTION ID],MESSAGE,[TYPE]) VALUES(@TRANSACTION_ID, '' + @PROCEDURE + ': Saved temporal data.','Success');
				COMMIT TRANSACTION LOG_TRANS;
				SET @TMP_TRANSACTION = @TRANSACTION_ID;
			END;

			FETCH CB INTO @DATA, @SOURCE, @DESCRIPTION, @MARKET, @BRAND,@GROUP, @YEAR_PERIOD,  @MONTH_PERIOD,@TOTAL,  @MONTH,@YTD,@MAT,@WC,@SB,@TRANSACTION_ID, @USER,@LAST_DATE 
			;
		END
		IF XACT_STATE() >0
		BEGIN 
		CLOSE CB;
		COMMIT TRANSACTION CUSTOM_L;
		END
		;
	END TRY
	BEGIN CATCH
		IF XACT_STATE() <0
		BEGIN
		ROLLBACK TRANSACTION CUSTOM_L;
		BEGIN TRANSACTION LOG_TRANS;
		INSERT INTO dbo.LOG_TABLE ([TRANSACTION ID],MESSAGE,[TYPE]) VALUES(@TRANSACTION_ID, '' + @PROCEDURE + ': Error saving temporal data.','Error');
		COMMIT TRANSACTION LOG_TRANS;
		CLOSE CB;
		CLOSE CM;
		THROW;
		END;
	END CATCH;
		OPEN PER;
		FETCH PER INTO @YEAR_PERIOD, @MONTH_PERIOD, @TRANSACTION_ID
		;
		WHILE (@@FETCH_STATUS = 0)
		BEGIN
		BEGIN TRY
		BEGIN TRANSACTION CUSTOM_L2;
		SET @MESSAGE = 'Init procedure for '+ CONVERT(nvarchar,@YEAR_PERIOD) + '/' + CONVERT(nvarchar,@MONTH_PERIOD);
		SET @STATUS = 'Success';
		SELECT @MAX = COUNT(1) FROM @TMP_TABLE WHERE YEAR_PERIOD = @YEAR_PERIOD;
		IF @YEAR_TMP != @YEAR_PERIOD
		BEGIN
			SET @YEAR_TMP = @YEAR_PERIOD;
			SET @MONTH_COUNTER = 0;
		END;
		SET @MONTH_COUNTER = @MONTH_COUNTER + 1;
		--Actualizamos la tabla BOY con datos a 0
		--INT y BTG del año en curso
		INSERT INTO STRWM_BOY_DATA (MARKET,[GROUP], MARKET_NAME, BRAND_NAME, DATA,[SOURCE], INT, BTG, PBP, [YEAR PERIOD], [MONTH PERIOD], [TYPE], CHANNEL, BRAND, TRANSACTION_ID, [USER], [LAST DATE])
			SELECT mstr.ID, B.[GROUP], mstr.NAME, bmstr.NAME, B.DATA, B.SOURCE, 0,0,NULL, @YEAR_PERIOD AS [YEAR PERIOD], @MONTH_PERIOD, 'MARKET', mstr.CHANNEL,bmstr.ID AS BRAND,B.TRANSACTION_ID,B.[USER],CURRENT_TIMESTAMP
			FROM STRWM_BRAND_DATA AS B 
			INNER JOIN BRAND_MASTER AS bmstr ON bmstr.ID = B.BRAND AND bmstr.MARKET = B.MARKET 
			INNER JOIN MARKET_MASTER AS mstr ON mstr.ID = B.MARKET
			WHERE B.[YEAR PERIOD] = @YEAR_PERIOD AND B.[MONTH PERIOD] = @MONTH_PERIOD 
			AND NOT EXISTS(
			SELECT 1 FROM STRWM_BOY_DATA AS S WHERE S.[MARKET] = B.[MARKET] AND S.[BRAND] = B.[BRAND] AND S.[YEAR PERIOD] = B.[YEAR PERIOD] AND S.[MONTH PERIOD] = B.[MONTH PERIOD] --AND S.INT IS NOT NULL AND S.BTG IS NOT NULL
			AND TYPE = 'MARKET')
			UNION
			SELECT mstr.ID, B.[GROUP], mstr.NAME, bmstr.NAME, B.DATA, B.SOURCE, 0,0,NULL, @YEAR_PERIOD AS [YEAR PERIOD], @MONTH_PERIOD, 'SELL IN', mstr.CHANNEL,bmstr.ID AS BRAND,B.TRANSACTION_ID,B.[USER],CURRENT_TIMESTAMP
			FROM STRWM_BRAND_DATA AS B 
			INNER JOIN BRAND_MASTER AS bmstr ON bmstr.ID = B.BRAND AND bmstr.MARKET = B.MARKET 
			INNER JOIN MARKET_MASTER AS mstr ON mstr.ID = B.MARKET
			WHERE B.[YEAR PERIOD] = @YEAR_PERIOD AND B.[MONTH PERIOD] = @MONTH_PERIOD 
			AND NOT EXISTS(
			SELECT 1 FROM STRWM_BOY_DATA AS S WHERE S.[MARKET] = B.[MARKET] AND S.[BRAND] = B.[BRAND] AND S.[YEAR PERIOD] = B.[YEAR PERIOD] AND S.[MONTH PERIOD] = B.[MONTH PERIOD] --AND S.INT IS NOT NULL AND S.BTG IS NOT NULL
			AND TYPE = 'SELL IN')
			UNION
			SELECT mstr.ID, B.[GROUP], mstr.NAME, bmstr.NAME, B.DATA, B.SOURCE, 0,0,NULL, @YEAR_PERIOD AS [YEAR PERIOD], @MONTH_PERIOD, 'SELL OUT', mstr.CHANNEL,bmstr.ID AS BRAND,B.TRANSACTION_ID,B.[USER],CURRENT_TIMESTAMP
			FROM STRWM_BRAND_DATA AS B 
			INNER JOIN BRAND_MASTER AS bmstr ON bmstr.ID = B.BRAND AND bmstr.MARKET = B.MARKET 
			INNER JOIN MARKET_MASTER AS mstr ON mstr.ID = B.MARKET
			WHERE B.[YEAR PERIOD] = @YEAR_PERIOD AND B.[MONTH PERIOD] = @MONTH_PERIOD 
			AND NOT EXISTS(
			SELECT 1 FROM STRWM_BOY_DATA AS S WHERE S.[MARKET] = B.[MARKET] AND S.[BRAND] = B.[BRAND] AND S.[YEAR PERIOD] = B.[YEAR PERIOD] AND S.[MONTH PERIOD] = B.[MONTH PERIOD] --AND S.INT IS NOT NULL AND S.BTG IS NOT NULL
			AND TYPE = 'SELL OUT')
			 
			;
		UPDATE B SET B.INT = 0, B.BTG = 0
			FROM STRWM_BOY_DATA AS B
			WHERE B.[YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			AND EXISTS
			(SELECT 1 FROM STRWM_BOY_DATA AS S WHERE S.MARKET = B.MARKET AND S.BRAND = B.BRAND AND S.[YEAR PERIOD] = B.[YEAR PERIOD] AND S.[MONTH PERIOD] = B.[MONTH PERIOD] AND S.TYPE = B.TYPE AND B.INT IS NULL AND B.BTG IS NULL)
			;
		--Actualizamos PBP del año siguiente en los datos que ya existen
		UPDATE B SET B.PBP = 0
			FROM STRWM_BOY_DATA AS B 
			WHERE B.[YEAR PERIOD] = @YEAR_PERIOD + 1 AND [MONTH PERIOD] = @MONTH_PERIOD
			AND EXISTS(
			SELECT NULL FROM STRWM_BOY_DATA AS S WHERE S.[MARKET] = B.[MARKET] AND S.[BRAND] = B.[BRAND] AND S.[YEAR PERIOD] = B.[YEAR PERIOD] AND S.[MONTH PERIOD] = B.[MONTH PERIOD] AND B.[TYPE] = S.[TYPE] AND B.PBP IS NULL)
			;
		--PBP del año posterior al año en curso
		INSERT INTO STRWM_BOY_DATA (MARKET,[GROUP], MARKET_NAME, BRAND_NAME, DATA,[SOURCE], INT, BTG, PBP, [YEAR PERIOD], [MONTH PERIOD], [TYPE], CHANNEL, BRAND, TRANSACTION_ID, [USER], [LAST DATE])
			SELECT mstr.ID, B.[GROUP], mstr.NAME, bmstr.NAME, B.DATA, B.SOURCE, NULL,NULL,0, @YEAR_PERIOD +1 AS [YEAR PERIOD], @MONTH_PERIOD, 'MARKET', mstr.CHANNEL,bmstr.ID AS BRAND,B.TRANSACTION_ID,B.[USER],CURRENT_TIMESTAMP
			FROM STRWM_BRAND_DATA AS B 
			INNER JOIN BRAND_MASTER AS bmstr ON bmstr.ID = B.BRAND AND bmstr.MARKET = B.MARKET 
			INNER JOIN MARKET_MASTER AS mstr ON mstr.ID = B.MARKET
			WHERE B.[YEAR PERIOD] = @YEAR_PERIOD AND B.[MONTH PERIOD] = @MONTH_PERIOD 
			AND NOT EXISTS(
			SELECT 1 FROM STRWM_BOY_DATA AS S WHERE S.[MARKET] = B.[MARKET] AND S.[BRAND] = B.[BRAND] AND S.[YEAR PERIOD] = B.[YEAR PERIOD] + 1 AND S.[MONTH PERIOD] = B.[MONTH PERIOD] --AND (S.PBP IS NULL OR S.PBP = 0)
			AND S.TYPE = 'MARKET')
			UNION
			SELECT mstr.ID, B.[GROUP], mstr.NAME, bmstr.NAME, B.DATA, B.SOURCE, NULL,NULL,0, @YEAR_PERIOD +1 AS [YEAR PERIOD], @MONTH_PERIOD, 'SELL IN', mstr.CHANNEL,bmstr.ID AS BRAND,B.TRANSACTION_ID,B.[USER],CURRENT_TIMESTAMP
			FROM STRWM_BRAND_DATA AS B 
			INNER JOIN BRAND_MASTER AS bmstr ON bmstr.ID = B.BRAND AND bmstr.MARKET = B.MARKET 
			INNER JOIN MARKET_MASTER AS mstr ON mstr.ID = B.MARKET
			WHERE B.[YEAR PERIOD] = @YEAR_PERIOD AND B.[MONTH PERIOD] = @MONTH_PERIOD 
			AND NOT EXISTS(
			SELECT 1 FROM STRWM_BOY_DATA AS S WHERE S.[MARKET] = B.[MARKET] AND S.[BRAND] = B.[BRAND] AND S.[YEAR PERIOD] = B.[YEAR PERIOD] + 1 AND S.[MONTH PERIOD] = B.[MONTH PERIOD] --AND (S.PBP IS NULL OR S.PBP = 0)
			AND S.TYPE = 'SELL IN')
			UNION
			SELECT mstr.ID, B.[GROUP], mstr.NAME, bmstr.NAME, B.DATA, B.SOURCE, NULL,NULL,0, @YEAR_PERIOD +1 AS [YEAR PERIOD], @MONTH_PERIOD, 'SELL OUT', mstr.CHANNEL,bmstr.ID AS BRAND,B.TRANSACTION_ID,B.[USER],CURRENT_TIMESTAMP
			FROM STRWM_BRAND_DATA AS B 
			INNER JOIN BRAND_MASTER AS bmstr ON bmstr.ID = B.BRAND AND bmstr.MARKET = B.MARKET 
			INNER JOIN MARKET_MASTER AS mstr ON mstr.ID = B.MARKET
			WHERE B.[YEAR PERIOD] = @YEAR_PERIOD AND B.[MONTH PERIOD] = @MONTH_PERIOD 
			AND NOT EXISTS(
			SELECT 1 FROM STRWM_BOY_DATA AS S WHERE S.[MARKET] = B.[MARKET] AND S.[BRAND] = B.[BRAND] AND S.[YEAR PERIOD] = B.[YEAR PERIOD] + 1 AND S.[MONTH PERIOD] = B.[MONTH PERIOD] --AND (S.PBP IS NULL OR S.PBP = 0)
			AND S.TYPE = 'SELL OUT')
			
			;
		--Actualizadas las tablas maestras ejecutamos las vistas:
		--Vistas Market básicas
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_MONTH WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_MONTH (CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [MONTH COL1], [MONTH COL2], PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [MONTH COL1], [MONTH COL2], CASE WHEN PCVSPY > 99.9 THEN 99.9 WHEN PCVSPY < -99.9 THEN -99.9 ELSE PCVSPY END AS PCVSPY,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_MONTH WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_YTD WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_YTD (CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [YTD COL1], [YTD COL2], PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [YTD COL1], [YTD COL2], CASE WHEN PCVSPY > 99.9 THEN 99.9 WHEN PCVSPY < -99.9 THEN -99.9 ELSE PCVSPY END AS PCVSPY,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_YTD WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_MAT WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_MAT (CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [MAT COL1], [MAT COL2], PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [MAT COL1], [MAT COL2], CASE WHEN PCVSPY > 99.9 THEN 99.9 WHEN PCVSPY < -99.9 THEN -99.9 ELSE PCVSPY END AS PCVSPY,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_MAT WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_TOTAL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_TOTAL (CHANNEL, MARKET, BRAND, [THREE AGO], [TWO AGO], [LAST], [CURRENT],[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, MARKET, BRAND, [THREE AGO], [TWO AGO], [LAST], [CURRENT], [YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_TOTAL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_TOTAL_CUSTOM WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_TOTAL_CUSTOM (CHANNEL, MARKET, BRAND, [ORDER], [GROUP],[THREE AGO], [TWO AGO], [LAST], [CURRENT],[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, MARKET, BRAND,[ORDER], [GROUP], [THREE AGO], [TWO AGO], [LAST], [CURRENT], [YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_TOTAL_CUSTOM WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--WRK_MARKET_BOY
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_BOY WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			BEGIN EXEC sp_WRK_MARKET_BOY @YEAR_PERIOD = @YEAR_PERIOD, @MONTH_PERIOD = @MONTH_PERIOD, @TRANSACTION_ID = @TRANSACTION_ID; END
			----Insertar nuevos datos.
			--INSERT INTO dbo.WRK_MARKET_BOY (CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, INTERNAL , LE, PBP, [YEAR PERIOD], [MONTH PERIOD])
			--SELECT CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND,  INTERNAL , LE, PBP, [YEAR PERIOD], [MONTH PERIOD]
			--FROM dbo.v_WRK_MARKET_BOY WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			--;
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_BTG WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_BTG (CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [BTG COL1], [BTG COL2], PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [BTG COL1], [BTG COL2], CASE WHEN PCVSPY > 99.9 THEN 99.9 WHEN PCVSPY < -99.9 THEN -99.9 ELSE PCVSPY END AS PCVSPY,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_BTG WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_PCVSPY WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_PCVSPY (CHANNEL, [GROUP], [ORDER], MARKET, BRAND, [THREE AGO], [TWO AGO], [LAST], [CURRENT], INTERNAL, LE, PBP, [PCVSPY COL1], [PCVSPY COL2], [PCVSPY COL3], [PCVSPY COL4], [PCVSPY COL5],[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, [GROUP],[ORDER], MARKET, BRAND, [THREE AGO], [TWO AGO], [LAST], [CURRENT], INTERNAL, LE, PBP, [PCVSPY COL1], [PCVSPY COL2], [PCVSPY COL3], [PCVSPY COL4], [PCVSPY COL5],[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_PCVSPY WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;

		--Vistas Brand básicas
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_MONTH WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_MONTH (CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [MONTH COL1], [MONTH COL2], PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [MONTH COL1], [MONTH COL2], CASE WHEN PCVSPY > 99.9 THEN 99.9 WHEN PCVSPY < -99.9 THEN -99.9 ELSE PCVSPY END AS PCVSPY,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_MONTH WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_YTD WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_YTD (CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [YTD COL1], [YTD COL2], PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [YTD COL1], [YTD COL2], CASE WHEN PCVSPY > 99.9 THEN 99.9 WHEN PCVSPY < -99.9 THEN -99.9 ELSE PCVSPY END AS PCVSPY,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_YTD WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_MAT WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_MAT (CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [MAT COL1], [MAT COL2], PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [MAT COL1], [MAT COL2], CASE WHEN PCVSPY > 99.9 THEN 99.9 WHEN PCVSPY < -99.9 THEN -99.9 ELSE PCVSPY END AS PCVSPY,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_MAT WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_TOTAL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_TOTAL (CHANNEL, MARKET, BRAND, [THREE AGO], [TWO AGO], [LAST], [CURRENT],[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, MARKET, BRAND, [THREE AGO], [TWO AGO], [LAST], [CURRENT], [YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_TOTAL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_TOTAL_CUSTOM WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_TOTAL_CUSTOM (CHANNEL, MARKET, BRAND, [ORDER], [GROUP],[THREE AGO], [TWO AGO], [LAST], [CURRENT],[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, MARKET, BRAND,[ORDER], [GROUP], COL1, COL2, COL3, COL4, [YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_TOTAL_CUSTOM WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--WRK_BRAND_BOY
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_BOY WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			BEGIN EXEC sp_WRK_BRAND_BOY @YEAR_PERIOD = @YEAR_PERIOD, @MONTH_PERIOD = @MONTH_PERIOD, @TRANSACTION_ID = @TRANSACTION_ID; END
			----Insertar nuevos datos.
			--INSERT INTO dbo.WRK_BRAND_BOY (CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, INTERNAL , LE, PBP, [YEAR PERIOD], [MONTH PERIOD])
			--SELECT CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND,  INTERNAL , LE, PBP, [YEAR PERIOD], [MONTH PERIOD]
			--FROM dbo.v_WRK_BRAND_BOY WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			--;
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_BTG WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_BTG (CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, COL1, COL2, COL3,[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, COL1, COL2, COL3,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_BTG WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_PCVSPY WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_PCVSPY (CHANNEL, [GROUP], [ORDER], MARKET, BRAND, COL1, COL2, COL3, COL4, INTERNAL, LE, PBP, [PCVSPY COL1], [PCVSPY COL2], [PCVSPY COL3], [PCVSPY COL4], [PCVSPY COL5],[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, [GROUP],[ORDER], MARKET, BRAND, COL1, COL2, COL3, COL4, INTERNAL, LE, PBP, [PCVSPY COL1], [PCVSPY COL2], [PCVSPY COL3], [PCVSPY COL4], [PCVSPY COL5],[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_PCVSPY WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;

		--Vistas Market Channel
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_MONTH_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_MONTH_CHANNEL(CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [MONTH COL1], [MONTH COL2], PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [MONTH COL1], [MONTH COL2], CASE WHEN PCVSPY > 99.9 THEN 99.9 WHEN PCVSPY < -99.9 THEN -99.9 ELSE PCVSPY END AS PCVSPY,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_MONTH_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_YTD_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_YTD_CHANNEL(CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [YTD COL1], [YTD COL2],PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [YTD COL1], [YTD COL2], CASE WHEN PCVSPY > 99.9 THEN 99.9 WHEN PCVSPY < -99.9 THEN -99.9 ELSE PCVSPY END AS PCVSPY,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_YTD_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_MAT_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_MAT_CHANNEL (CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [MAT COL1], [MAT COL2], PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [MAT COL1], [MAT COL2], CASE WHEN PCVSPY > 99.9 THEN 99.9 WHEN PCVSPY < -99.9 THEN -99.9 ELSE PCVSPY END AS PCVSPY,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_MAT_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_TOTAL_CUSTOM_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_TOTAL_CUSTOM_CHANNEL (CHANNEL, MARKET, BRAND, [THREE AGO], [TWO AGO], [LAST], [CURRENT],[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, MARKET, BRAND, [THREE AGO], [TWO AGO], [LAST], [CURRENT], [YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_TOTAL_CUSTOM_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_BOY_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_BOY_CHANNEL (CHANNEL,[ORDER], [GROUP], MARKET, BRAND, INTERNAL , LE, PBP, [YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, [GROUP_ORDER], [GROUP], MARKET, BRAND,  INTERNAL , LE, PBP, [YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_BOY_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_BTG_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_BTG_CHANNEL (CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [BTG COL1], [BTG COL2], PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [BTG COL1], [BTG COL2], CASE WHEN PCVSPY > 99.9 THEN 99.9 WHEN PCVSPY < -99.9 THEN -99.9 ELSE PCVSPY END AS PCVSPY,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_BTG_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_PCVSPY_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_PCVSPY_CHANNEL (CHANNEL, [GROUP], MARKET, BRAND, [THREE AGO], [TWO AGO], [LAST], [CURRENT], INTERNAL, LE, PBP, [PCVSPY COL1], [PCVSPY COL2], [PCVSPY COL3], [PCVSPY COL4], [PCVSPY COL5],[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, [GROUP], MARKET, BRAND, [THREE AGO], [TWO AGO], [LAST], [CURRENT], INTERNAL, LE, PBP, [PCVSPY COL1], [PCVSPY COL2], [PCVSPY COL3], [PCVSPY COL4], [PCVSPY COL5],[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_PCVSPY_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
		
		--Vistas Brand Channel
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_MONTH_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_MONTH_CHANNEL(CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [MONTH COL1], [MONTH COL2], PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [MONTH COL1], [MONTH COL2], CASE WHEN PCVSPY > 99.9 THEN 99.9 WHEN PCVSPY < -99.9 THEN -99.9 ELSE PCVSPY END AS PCVSPY,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_MONTH_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_YTD_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_YTD_CHANNEL(CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [YTD COL1], [YTD COL2], PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [YTD COL1], [YTD COL2], CASE WHEN PCVSPY > 99.9 THEN 99.9 WHEN PCVSPY < -99.9 THEN -99.9 ELSE PCVSPY END AS PCVSPY,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_YTD_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_MAT_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_MAT_CHANNEL (CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [MAT COL1], [MAT COL2], PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, [MAT COL1], [MAT COL2], CASE WHEN PCVSPY > 99.9 THEN 99.9 WHEN PCVSPY < -99.9 THEN -99.9 ELSE PCVSPY END AS PCVSPY,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_MAT_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_TOTAL_CUSTOM_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_TOTAL_CUSTOM_CHANNEL (CHANNEL, MARKET, BRAND, [THREE AGO], [TWO AGO], [LAST], [CURRENT],[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, MARKET, BRAND, [THREE AGO], [TWO AGO], [LAST], [CURRENT], [YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_TOTAL_CUSTOM_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_BOY_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_BOY_CHANNEL (CHANNEL,[ORDER], [GROUP], MARKET, BRAND, INTERNAL , LE, PBP, [YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, [GROUP_ORDER], [GROUP], MARKET, BRAND,  INTERNAL , LE, PBP, [YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_BOY_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_BTG_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_BTG_CHANNEL (CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, COL1, COL2, PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, GROUP_ORDER, [GROUP], MARKET, BRAND, COL1, COL2, CASE WHEN PCVSPY > 99.9 THEN 99.9 WHEN PCVSPY < -99.9 THEN -99.9 ELSE PCVSPY END AS PCVSPY,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_BTG_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_PCVSPY_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_PCVSPY_CHANNEL (CHANNEL, [GROUP], MARKET, BRAND, COL1, COL2, COL3, COL4, INTERNAL, LE, PBP, [PCVSPY COL1], [PCVSPY COL2], [PCVSPY COL3], [PCVSPY COL4], [PCVSPY COL5],[YEAR PERIOD], [MONTH PERIOD])
			SELECT CHANNEL, [GROUP], MARKET, BRAND, COL1, COL2, COL3, COL4, INTERNAL, LE, PBP, [PCVSPY COL1], [PCVSPY COL2], [PCVSPY COL3], [PCVSPY COL4], [PCVSPY COL5],[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_PCVSPY_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;

		--Vistas Market Franchise
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_MONTH_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_MONTH_FRANCHISE ([ORDER], [ID], [PARENT_ID], NAME, [COL1], [COL2], PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT [ORDER], [ID], [PARENT_ID], NAME, [COL1], [COL2], CASE WHEN PCVSPY > 99.9 THEN 99.9 WHEN PCVSPY < -99.9 THEN -99.9 ELSE PCVSPY END AS PCVSPY,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_MONTH_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_YTD_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_YTD_FRANCHISE ([ORDER], [ID], [PARENT_ID], NAME, [COL1], [COL2],PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT [ORDER], [ID], [PARENT_ID], NAME, [COL1], [COL2], [COL3],[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_YTD_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_MAT_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_MAT_FRANCHISE ([ORDER], [ID], [PARENT_ID], NAME, [COL1], [COL2], PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT [ORDER], [ID], [PARENT_ID], NAME, [COL1], [COL2], CASE WHEN PCVSPY > 99.9 THEN 99.9 WHEN PCVSPY < -99.9 THEN -99.9 ELSE PCVSPY END AS PCVSPY,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_MAT_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_TOTAL_CUSTOM_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_TOTAL_CUSTOM_FRANCHISE ([ORDER], ID, PARENT_ID,NAME, [THREE AGO], [TWO AGO], [LAST], [CURRENT],[YEAR PERIOD], [MONTH PERIOD])
			SELECT [ORDER], ID, PARENT_ID, NAME, [THREE AGO], [TWO AGO], [LAST], [CURRENT], [YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_TOTAL_CUSTOM_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_BTG_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_BTG_FRANCHISE ([ORDER], [ID], [PARENT_ID], NAME, [COL1], [COL2], PCVSPY,[YEAR PERIOD], [MONTH PERIOD])
			SELECT [ORDER], [ID], [PARENT_ID], NAME, [COL1], [COL2], CASE WHEN PCVSPY > 99.9 THEN 99.9 WHEN PCVSPY < -99.9 THEN -99.9 ELSE PCVSPY END AS PCVSPY,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_BTG_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_BOY_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_BOY_FRANCHISE (PARENT_ID,[ORDER], [ID],NAME, INTERNAL , LE, PBP, [YEAR PERIOD], [MONTH PERIOD])
			SELECT PARENT_ID,[ORDER], [ID], NAME, INTERNAL , LE, PBP, [YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_BOY_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_MARKET_PCVSPY_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_MARKET_PCVSPY_FRANCHISE (PARENT_ID,[ORDER], [ID], NAME, [THREE AGO], [TWO AGO], [LAST], [CURRENT], INTERNAL, LE, PBP, [PCVSPY COL1], [PCVSPY COL2], [PCVSPY COL3], [PCVSPY COL4], [PCVSPY COL5],[YEAR PERIOD], [MONTH PERIOD])
			SELECT PARENT_ID,[ORDER], [ID], NAME, [THREE AGO], [TWO AGO], [LAST], [CURRENT], INTERNAL, LE, PBP, [PCVSPY COL1], [PCVSPY COL2], [PCVSPY COL3], [PCVSPY COL4], [PCVSPY COL5],[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_MARKET_PCVSPY_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;

		--Vistas Brand Franchise
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_MONTH_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_MONTH_FRANCHISE ([ORDER], [ID], [PARENT_ID], NAME, [COL1], [COL2], COL3,[YEAR PERIOD], [MONTH PERIOD])
			SELECT [ORDER], [ID], [PARENT_ID], NAME, [COL1], [COL2], COL3,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_MONTH_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_YTD_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_YTD_FRANCHISE ([ORDER], [ID], [PARENT_ID], NAME, [COL1], [COL2], COL3,[YEAR PERIOD], [MONTH PERIOD])
			SELECT [ORDER], [ID], [PARENT_ID], NAME, [COL1], [COL2], [COL3],[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_YTD_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_MAT_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_MAT_FRANCHISE ([ORDER], [ID], [PARENT_ID], NAME, [COL1], [COL2], COL3,[YEAR PERIOD], [MONTH PERIOD])
			SELECT [ORDER], [ID], [PARENT_ID], NAME, [COL1], [COL2], COL3,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_MAT_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_TOTAL_CUSTOM_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_TOTAL_CUSTOM_FRANCHISE ([ORDER], ID, PARENT_ID,NAME, COL1, COL2, COL3, COL4,[YEAR PERIOD], [MONTH PERIOD])
			SELECT [ORDER], ID, PARENT_ID, NAME, COL1, COL2, COL3, COL4, [YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_TOTAL_CUSTOM_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_BTG_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_BTG_FRANCHISE ([ORDER], [ID], [PARENT_ID], NAME, [COL1], [COL2], COL3,[YEAR PERIOD], [MONTH PERIOD])
			SELECT [ORDER], [ID], [PARENT_ID], NAME, [COL1], [COL2], COL3,[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_BTG_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_BOY_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_BOY_FRANCHISE (PARENT_ID,[ORDER], [ID],NAME, COL1 , COL2, COL3, [YEAR PERIOD], [MONTH PERIOD])
			SELECT PARENT_ID,[ORDER], [ID], NAME, COL1 , COL2, COL3, [YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_BOY_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_PCVSPY_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_BRAND_PCVSPY_FRANCHISE (PARENT_ID,[ORDER], [ID], NAME, COL1, COL2, COL3, COL4, INTERNAL, LE, PBP, [PCVSPY COL1], [PCVSPY COL2], [PCVSPY COL3], [PCVSPY COL4], [PCVSPY COL5],[YEAR PERIOD], [MONTH PERIOD])
			SELECT PARENT_ID,[ORDER], [ID], NAME, COL1, COL2, COL3, COL4, INTERNAL, LE, PBP, [PCVSPY COL1], [PCVSPY COL2], [PCVSPY COL3], [PCVSPY COL4], [PCVSPY COL5],[YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_BRAND_PCVSPY_FRANCHISE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
		--Resto de vistas

			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_BY_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos
			INSERT INTO dbo.WRK_BRAND_BY_CHANNEL
			(CHANNEL, [GROUP], [YTD COL1], [YTD COL2],[MAT COL1], [MAT COL2],[TOTAL COL1], [TOTAL COL2],[MONTH COL1],[MONTH COL2], [YEAR PERIOD],[MONTH PERIOD])
			SELECT
				CHANNEL, [GROUP], [YTD COL1], [YTD COL2],[MAT COL1], [MAT COL2],[TOTAL COL1], [TOTAL COL2],[MONTH COL1],[MONTH COL2], [YEAR PERIOD],[MONTH PERIOD]
				FROM dbo.v_WRK_BRAND_BY_CHANNEL WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = [MONTH PERIOD]
				;

			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_BY_CUSTOM_GROUP WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos
			INSERT INTO dbo.WRK_BRAND_BY_CUSTOM_GROUP
			(CHANNEL, [GROUP], [YTD COL1], [YTD COL2],[MAT COL1], [MAT COL2],[TOTAL COL1], [TOTAL COL2],[MONTH COL1],[MONTH COL2], [YEAR PERIOD],[MONTH PERIOD])
			SELECT
				CHANNEL, [GROUP], [YTD COL1], [YTD COL2],[MAT COL1], [MAT COL2],[TOTAL COL1], [TOTAL COL2],[MONTH COL1],[MONTH COL2], [YEAR PERIOD],[MONTH PERIOD]
				FROM dbo.v_WRK_BRAND_BY_CUSTOM_GROUP WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = [MONTH PERIOD]
				;

			--Borrar datos del periodo
			DELETE dbo.WRK_BRAND_BY_SUPER WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos
			INSERT INTO dbo.WRK_BRAND_BY_SUPER
			(CHANNEL, [GROUP], [YTD COL1], [YTD COL2],[MAT COL1], [MAT COL2],[TOTAL COL1], [TOTAL COL2],[MONTH COL1],[MONTH COL2], [YEAR PERIOD],[MONTH PERIOD])
			SELECT
				CHANNEL, [GROUP], [YTD COL1], [YTD COL2],[MAT COL1], [MAT COL2],[TOTAL COL1], [TOTAL COL2],[MONTH COL1],[MONTH COL2], [YEAR PERIOD],[MONTH PERIOD]
				FROM dbo.v_WRK_BRAND_BY_SUPER WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = [MONTH PERIOD]
				;

			--Borrar datos del periodo
			DELETE dbo.WRK_KEYBRANDS_BASE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_KEYBRANDS_BASE ([DATA],[TYPE], [ID],NAME, COL1 , COL2, COL3,[PCVSPY], [YEAR PERIOD], [MONTH PERIOD])
			SELECT [DATA],[TYPE], [ID], NAME, COL1 , COL2, COL3,[PCVSPY], [YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_KEYBRANDS_BASE WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_KEYBRANDS_BOY WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_KEYBRANDS_BOY ([DATA],[TYPE], [ID],NAME, COL1 , COL2, COL3, [YEAR PERIOD], [MONTH PERIOD])
			SELECT [DATA],[TYPE], [ID], NAME, COL1 , COL2, COL3, [YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_KEYBRANDS_BOY WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_KEYBRANDS_BTG WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_KEYBRANDS_BTG ([DATA],[TYPE], [ID],NAME, COL1 , COL2, [PCVSPY], [YEAR PERIOD], [MONTH PERIOD])
			SELECT [DATA],[TYPE], [ID], NAME, COL1 , COL2, [PSVSPY], [YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_KEYBRANDS_BTG WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Borrar datos del periodo
			DELETE dbo.WRK_KEYBRANDS_PCVSPY WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			--Insertar nuevos datos.
			INSERT INTO dbo.WRK_KEYBRANDS_PCVSPY ([DATA],[TYPE], [ID],NAME, COL1 , COL2, COL3,COL4,COL5, [YEAR PERIOD], [MONTH PERIOD])
			SELECT [DATA],[TYPE], [ID], NAME, COL1 , COL2, COL3,[COL4],[COL5], [YEAR PERIOD], [MONTH PERIOD]
			FROM dbo.v_WRK_KEYBRANDS_PCVSPY WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
			;

		--Insertamos el periodo en la tabla de periodos.
			SET @counter = 0;
			SELECT @counter = COUNT(1) FROM PERIOD_TABLE WHERE YEAR_PERIOD = @YEAR_PERIOD AND MONTH_PERIOD = @MONTH_PERIOD
			;
			IF(@counter = 0)
			BEGIN
				INSERT INTO PERIOD_TABLE (YEAR_PERIOD, MONTH_PERIOD, [DATE]) VALUES (@YEAR_PERIOD,@MONTH_PERIOD, CURRENT_TIMESTAMP)
				;
			END
			;
			
			IF (@MONTH_COUNTER = @MAX) SET @STATUS = 'Done';
			--SET @MESSAGE  = CONVERT(nvarchar,@MONTH_COUNTER) + '-' + CONVERT(nvarchar,@MAX);
			IF XACT_STATE() > 0
			BEGIN
			COMMIT TRANSACTION CUSTOM_L2;
			BEGIN EXEC sp_BOY_TABLES_LOADER @YEAR_PERIOD = @YEAR_PERIOD, @MONTH_PERIOD = @MONTH_PERIOD, @USER = @USER, @TRANSACTION_ID = @TRANSACTION_ID; END
			BEGIN TRANSACTION LOG_TRANS;
			INSERT INTO dbo.LOG_TABLE ([TRANSACTION ID],MESSAGE,[TYPE]) VALUES(@TRANSACTION_ID, 'Data write for ' + @PROCEDURE + ' procedure period ' + CONVERT(nvarchar,@YEAR_PERIOD) + '/' + CONVERT(nvarchar,@MONTH_PERIOD),@STATUS);
			COMMIT TRANSACTION LOG_TRANS;
			END;
	FETCH PER INTO @YEAR_PERIOD, @MONTH_PERIOD, @TRANSACTION_ID;
	END TRY
	BEGIN CATCH
			IF XACT_STATE()<0
			BEGIN
			ROLLBACK TRANSACTION CUSTOM_L2;
			BEGIN TRANSACTION LOG_TRANS;
			INSERT INTO dbo.LOG_TABLE ([TRANSACTION ID],MESSAGE,[TYPE],[ERROR MESSAGE]) VALUES(@TRANSACTION_ID, 'Data write fail ','Success',@MESSAGE);
			COMMIT TRANSACTION LOG_TRANS;
			THROW;
			END;
	END CATCH;
	END
	CLOSE PER;

END





GO


