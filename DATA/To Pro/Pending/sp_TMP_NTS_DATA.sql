USE [godzilla]
GO

/****** Object:  StoredProcedure [dbo].[sp_TMP_NTS_DATA]    Script Date: 10/9/2016 6:07:35 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO









-- =============================================
-- Author:		Angel Oterino
-- Create date: 21/04/2015
-- Description:	Creación de tablas NTS
-- =============================================
ALTER PROCEDURE [dbo].[sp_TMP_NTS_DATA]
	-- Add the parameters for the stored procedure here	
	@TRANSACTION_ID INT,
	@USER nvarchar(255)
AS
BEGIN
	 --SET NOCOUNT ON added to prevent extra result sets from
	 --interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE
		@YEAR_PERIOD INT, 
		@MONTH_PERIOD INT,
		@CHANNEL numeric(18,0),
		@MARKET numeric(18,0),
		@BRAND numeric(18,0),
		@MONTH numeric(38,2),
		@MAT numeric(38,2),
		@YTD numeric(38,2),
		@TOTAL numeric(38,2),
		@DATA nvarchar(255),
		@SOURCE nvarchar(255),
		@MONTH_AMOUNT_ACTUAL decimal(18,5),
		@MONTH_AMOUNT_PY decimal(18,5),
		@YTD_AMOUNT_ACTUAL decimal(18,5),
		@YTD_AMOUNT_PY decimal(18,5),
		@NTS_CFG numeric(18,0) ,
		@MESSAGE NVARCHAR(255),
		@TRANSACTION_COUNT numeric(18,0) = 0,
		@PROCEDURE NVARCHAR(255) = 'sp_TMP_NTS_DATA',
		@FETCH_PER numeric(18,0),
		@FETCH_TMP numeric(18,0)
		;	
    -- Insert statements for procedure here
	DECLARE CM CURSOR LOCAL FOR
	SELECT mst.NAME, mst.ID AS BRAND, mst.MARKET, mst.CHANNEL,
        CONVERT(DECIMAL(18,0),SUBSTRING(nts.[Fiscal year period], 0, CHARINDEX('.',nts.[Fiscal year period]))) AS [MONTH PERIOD],
        CONVERT(DECIMAL(18,0),SUBSTRING(nts.[Fiscal year period], CHARINDEX('.',nts.[Fiscal year period]) + 1, (LEN(nts.[Fiscal year period])
        - LEN(SUBSTRING(nts.[Fiscal year period], 0, CHARINDEX('.',nts.[Fiscal year period]))) ))) AS [YEAR PERIOD],
        SUM(CONVERT(DECIMAL(18,5),REPLACE(nts.[ NTS ],',','.'))) AS AMOUNTH, 1 AS [NTS CFG]
		FROM TMP_NTS_DATA AS nts 
		INNER JOIN [NTS MASTER] AS ros 
		ON ros.[Mat Local Class 2] = nts.[Mat Local Class 2] and ros.[Mat Local Class 3] = nts.[Mat Local Class 3] AND ros.[Mat Local Class 4] = nts.[Mat Local Class 4] 
		AND ros.MARKET_NAME = nts.MARKET AND ISNUMERIC(ros.CHANNEL ) = 1 AND ISNUMERIC(ros.BRAND) = 1 AND ISNUMERIC(ros.MARKET) = 1
		INNER JOIN BRAND_MASTER AS mst ON mst.ID = ros.BRAND AND mst.MARKET = ros.MARKET AND mst.CHANNEL = ros.CHANNEL
		WHERE ISNUMERIC(REPLACE(nts.[ NTS ],',','.')) = 1
		GROUP BY mst.NAME, mst.ID, mst.MARKET, mst.CHANNEL, nts.[Fiscal year period]
    ;
    DECLARE @TMP_TABLE TABLE  (
		NAME varchar(255),
		BRAND numeric(18,0),
		MARKET numeric(18,0),
		CHANNEL numeric(18,0),
		[MONTH PERIOD] numeric(18,0),
		[YEAR PERIOD] numeric(18,0),
		AMOUNT decimal(18,5),
		[NTS CFG] numeric(18,0)
    );
    
    INSERT INTO @TMP_TABLE
		SELECT mst.NAME, mst.ID AS BRAND, mst.MARKET, mst.CHANNEL,
        CONVERT(DECIMAL(18,0),SUBSTRING(nts.[Fiscal year period], 0, CHARINDEX('.',nts.[Fiscal year period]))) AS [MONTH PERIOD],
        CONVERT(DECIMAL(18,0),SUBSTRING(nts.[Fiscal year period], CHARINDEX('.',nts.[Fiscal year period]) + 1, (LEN(nts.[Fiscal year period])
        - LEN(SUBSTRING(nts.[Fiscal year period], 0, CHARINDEX('.',nts.[Fiscal year period]))) ))) AS [YEAR PERIOD],
        SUM(CONVERT(DECIMAL(18,5),REPLACE(nts.[ NTS ],',','.'))) AS AMOUNTH, 1 AS [NTS CFG]
		FROM TMP_NTS_DATA AS nts 
		INNER JOIN [NTS MASTER] AS ros 
		ON ros.[Mat Local Class 2] = nts.[Mat Local Class 2] and ros.[Mat Local Class 3] = nts.[Mat Local Class 3] AND ros.[Mat Local Class 4] = nts.[Mat Local Class 4] 
		AND ros.MARKET_NAME = nts.MARKET AND ISNUMERIC(ros.CHANNEL ) = 1 AND ISNUMERIC(ros.BRAND) = 1 AND ISNUMERIC(ros.MARKET) = 1
		INNER JOIN BRAND_MASTER AS mst ON mst.ID = ros.BRAND AND mst.MARKET = ros.MARKET AND mst.CHANNEL = ros.CHANNEL
		WHERE ISNUMERIC(REPLACE(nts.[ NTS ],',','.')) = 1
		GROUP BY mst.NAME, mst.ID, mst.MARKET, mst.CHANNEL, nts.[Fiscal year period]
    ;
    
    DECLARE PER CURSOR LOCAL FOR
		SELECT DISTINCT [YEAR PERIOD], [MONTH PERIOD]
			FROM @TMP_TABLE
	;
	DECLARE TMP_DATA CURSOR LOCAL FOR
		SELECT DISTINCT CHANNEL, MARKET, BRAND, [NTS CFG]
			FROM @TMP_TABLE
			--WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
	;
	TRUNCATE TABLE dbo.STRWM_NTS_DATA_BCK
	;
	OPEN TMP_DATA;
	FETCH TMP_DATA INTO @CHANNEL, @MARKET, @BRAND, @NTS_CFG;
	OPEN PER;
	--FETCH PER INTO @YEAR_PERIOD,@MONTH_PERIOD
	;
	SET @MESSAGE = 'Insert data in TMP_TABLE';
	SET @FETCH_PER = 0;
	SET @FETCH_TMP = 0;
	WHILE (@FETCH_PER = 0)
	BEGIN
		BEGIN TRY
		BEGIN TRANSACTION NTS_TRANS;		
		SET @TRANSACTION_COUNT = @TRANSACTION_COUNT + 1
		;
		FETCH PER INTO @YEAR_PERIOD,@MONTH_PERIOD;
		SET @FETCH_PER = @@FETCH_STATUS;
		WHILE(@FETCH_TMP = 0)
		BEGIN 
			--Cálculo de MONTH
			SELECT @CHANNEL = CHANNEL, @MARKET = MARKET, @BRAND = BRAND, @MONTH_AMOUNT_ACTUAL = AMOUNT / 1000
			FROM @TMP_TABLE
			WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD AND CHANNEL = @CHANNEL AND MARKET = @MARKET AND @BRAND = BRAND AND [NTS CFG] = @NTS_CFG
			;
			--Cálculo de YTD
			SELECT @CHANNEL = CHANNEL, @MARKET = MARKET, @BRAND = BRAND, @YTD_AMOUNT_ACTUAL = SUM(AMOUNT) / 1000
			FROM @TMP_TABLE
			WHERE CHANNEL = @CHANNEL AND MARKET = @MARKET AND @BRAND = BRAND AND [NTS CFG] = @NTS_CFG 
				AND ([YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] <= @MONTH_PERIOD)
			GROUP BY CHANNEL, MARKET, BRAND
			;
			
			INSERT INTO dbo.STRWM_NTS_DATA_BCK ([CHANNEL],[MARKET],[BRAND],[NTS CFG]
			,[MONTH_AMOUNT_ACTUAL], [MONTH_AMOUNT_FBP] , [MONTH_AMOUNT_PY], MONTH_CHANGE_FBP ,[MONTH_CHANGE_PY]
			,YTD_AMOUNT_ACTUAL, YTD_AMOUNT_FBP, YTD_AMOUNT_PY, YTD_CHANGE_FBP, YTD_CHANGE_PY
			,TRANSACTION_ID,[YEAR PERIOD],[MONTH PERIOD],[USER], [LAST DATE])
			VALUES
			(@CHANNEL,@MARKET,@BRAND,@NTS_CFG,
				@MONTH_AMOUNT_ACTUAL,NULL,null,NULL,NULL,
				@YTD_AMOUNT_ACTUAL, NULL,null,NULL,NULL,
				@TRANSACTION_ID, @YEAR_PERIOD, @MONTH_PERIOD,
				@USER,CURRENT_TIMESTAMP)
			;
			--Actualizamos los datos YTD_PY y MONTH_PY en la tabla temporal con datos de este año si existen

			--Datos YTD_PY, contando con datos de las tablas definitivas 
			SELECT @YTD_AMOUNT_PY = SUM(MONTH_AMOUNT_ACTUAL) FROM 
			(SELECT MARKET, BRAND, CHANNEL, [YEAR PERIOD], [MONTH PERIOD], [MONTH_AMOUNT_ACTUAL]
				FROM STRWM_NTS_DATA_BCK
				UNION
				SELECT MARKET, BRAND, CHANNEL, [YEAR PERIOD], [MONTH PERIOD], [MONTH_AMOUNT_ACTUAL]
				FROM STRWM_NTS_DATA AS b 
				WHERE NOT EXISTS (SELECT NULL FROM STRWM_NTS_DATA_BCK AS D WHERE D.MARKET = b.MARKET AND d.BRAND = b.BRAND AND d.CHANNEL = b.CHANNEL AND d.[YEAR PERIOD] = b.[YEAR PERIOD] 
				AND d.[MONTH PERIOD] = b.[MONTH PERIOD]))
				AS DAT
			WHERE MARKET = @MARKET AND BRAND = @BRAND AND CHANNEL = @CHANNEL AND
			(([YEAR PERIOD] = @YEAR_PERIOD - 1 AND [MONTH PERIOD] <= @MONTH_PERIOD))
			GROUP BY MARKET, BRAND, CHANNEL
			;
			SELECT @MONTH_AMOUNT_PY = MONTH_AMOUNT_ACTUAL FROM
			(SELECT MARKET, BRAND, CHANNEL, [YEAR PERIOD],[MONTH PERIOD], [MONTH_AMOUNT_ACTUAL]
			FROM STRWM_NTS_DATA_BCK
			UNION
			SELECT MARKET, BRAND, CHANNEL, [YEAR PERIOD], [MONTH PERIOD], [MONTH_AMOUNT_ACTUAL]
				FROM STRWM_NTS_DATA AS b 
				WHERE NOT EXISTS (SELECT NULL FROM STRWM_NTS_DATA_BCK AS D WHERE D.MARKET = b.MARKET AND d.BRAND = b.BRAND AND d.CHANNEL = b.CHANNEL AND d.[YEAR PERIOD] = b.[YEAR PERIOD] 
				AND d.[MONTH PERIOD] = b.[MONTH PERIOD]))
				AS DAT
			WHERE MARKET = @MARKET AND BRAND = @BRAND AND CHANNEL = @CHANNEL
			AND [YEAR PERIOD] = @YEAR_PERIOD - 1 AND [MONTH PERIOD] = @MONTH_PERIOD
			;
			UPDATE t 
			SET t.YTD_AMOUNT_PY = @YTD_AMOUNT_PY
			,t.MONTH_AMOUNT_PY = @MONTH_AMOUNT_PY
			FROM dbo.STRWM_NTS_DATA_BCK AS t
			WHERE t.[YEAR PERIOD] = @YEAR_PERIOD AND t.[MONTH PERIOD] = @MONTH_PERIOD AND t.[BRAND] = @BRAND AND t.[MARKET] = @MARKET AND t.[CHANNEL] = @CHANNEL
			;
			--Actualizamos las tablas finales
			DELETE dbo.STRWM_NTS_DATA WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD AND [BRAND] = @BRAND AND [MARKET] = @MARKET AND [CHANNEL] = @CHANNEL
			;
			INSERT INTO dbo.STRWM_NTS_DATA
				([CHANNEL],[MARKET],[BRAND],[NTS CFG]
				,[MONTH_AMOUNT_ACTUAL], [MONTH_AMOUNT_FBP] , [MONTH_AMOUNT_PY], MONTH_CHANGE_FBP ,[MONTH_CHANGE_PY]
				,YTD_AMOUNT_ACTUAL, YTD_AMOUNT_FBP, YTD_AMOUNT_PY, YTD_CHANGE_FBP, YTD_CHANGE_PY
				,TRANSACTION_ID,[YEAR PERIOD],[MONTH PERIOD],[USER], [LAST DATE])
			SELECT [CHANNEL],[MARKET],[BRAND],[NTS CFG]
				,[MONTH_AMOUNT_ACTUAL], [MONTH_AMOUNT_FBP] , [MONTH_AMOUNT_PY], MONTH_CHANGE_FBP ,[MONTH_CHANGE_PY]
				,YTD_AMOUNT_ACTUAL, YTD_AMOUNT_FBP, YTD_AMOUNT_PY, YTD_CHANGE_FBP, YTD_CHANGE_PY
				,TRANSACTION_ID,[YEAR PERIOD],[MONTH PERIOD],[USER], [LAST DATE]
			FROM STRWM_NTS_DATA_BCK
			WHERE [YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD AND [TRANSACTION_ID] = @TRANSACTION_ID
			AND [BRAND] = @BRAND AND [MARKET] = @MARKET AND [CHANNEL] = @CHANNEL AND [NTS CFG] = @NTS_CFG
			;
			FETCH TMP_DATA INTO @CHANNEL, @MARKET, @BRAND,@NTS_CFG;
			SET @FETCH_TMP = @@FETCH_STATUS;
		END
		;
		IF (@@TRANCOUNT>0) 
		BEGIN
			BEGIN TRANSACTION LOG_TRANS;
			INSERT INTO dbo.LOG_TABLE ([TRANSACTION ID],MESSAGE,[TYPE]) VALUES(@TRANSACTION_ID, 'Data write for ' + @PROCEDURE + ' procedure period ' + CONVERT(nvarchar,@YEAR_PERIOD) + '/' + CONVERT(nvarchar,@MONTH_PERIOD),'Success');
			COMMIT TRANSACTION LOG_TRANS;
			COMMIT TRANSACTION NTS_TRANS;
			CLOSE TMP_DATA;
			SET @MESSAGE = 'Calc BOYs';
			--Volvemos a calcular los BOYS.

			--Insertamos la nueva configuración en STRWM_BOY_DATA si es necesario.

			INSERT INTO STRWM_BOY_DATA (MARKET,[GROUP], MARKET_NAME, BRAND_NAME, DATA,[SOURCE], INT, BTG, PBP, [YEAR PERIOD], [MONTH PERIOD], [TYPE], CHANNEL, BRAND, TRANSACTION_ID, [USER], [LAST DATE])
			SELECT mstr.ID, R.[GROUP ID], mstr.NAME, bmstr.NAME, DATENAME(month, CAST(@YEAR_PERIOD AS nvarchar) + '-' + CAST(@MONTH_PERIOD AS nvarchar) + '-1') AS DATA,
			R.SOURCE, 0,0,NULL, @YEAR_PERIOD AS [YEAR PERIOD], @MONTH_PERIOD, 'MARKET', mstr.CHANNEL,bmstr.ID AS BRAND, @TRANSACTION_ID, @USER,
			CURRENT_TIMESTAMP
			FROM ROSETTA_LOADER AS R 
			INNER JOIN BRAND_MASTER AS bmstr ON bmstr.ID = R.[BRAND ID] AND bmstr.MARKET = R.[MARKET ID]
			INNER JOIN MARKET_MASTER AS mstr ON mstr.ID = R.[MARKET ID]
			WHERE NOT EXISTS(
			SELECT 1 FROM STRWM_BOY_DATA AS S WHERE S.[MARKET] = R.[MARKET ID] AND S.[BRAND] = R.[BRAND ID] AND S.[YEAR PERIOD] = @YEAR_PERIOD AND S.[MONTH PERIOD] =  @MONTH_PERIOD 
			AND TYPE = 'MARKET')
			UNION
			SELECT mstr.ID, R.[GROUP ID], mstr.NAME, bmstr.NAME, DATENAME(month, CAST(@YEAR_PERIOD AS nvarchar) + '-' + CAST(@MONTH_PERIOD AS nvarchar) + '-1') AS DATA,
			R.SOURCE, 0,0,NULL, @YEAR_PERIOD AS [YEAR PERIOD], @MONTH_PERIOD, 'SELL IN', mstr.CHANNEL,bmstr.ID AS BRAND, @TRANSACTION_ID, @USER,
			CURRENT_TIMESTAMP
			FROM ROSETTA_LOADER AS R 
			INNER JOIN BRAND_MASTER AS bmstr ON bmstr.ID = R.[BRAND ID] AND bmstr.MARKET = R.[MARKET ID]
			INNER JOIN MARKET_MASTER AS mstr ON mstr.ID = R.[MARKET ID]
			WHERE NOT EXISTS(
			SELECT 1 FROM STRWM_BOY_DATA AS S WHERE S.[MARKET] = R.[MARKET ID] AND S.[BRAND] = R.[BRAND ID] AND S.[YEAR PERIOD] = @YEAR_PERIOD AND S.[MONTH PERIOD] = @MONTH_PERIOD 
			AND TYPE = 'SELL IN')
			UNION
			SELECT mstr.ID, R.[GROUP ID], mstr.NAME, bmstr.NAME, DATENAME(month, CAST(@YEAR_PERIOD AS nvarchar) + '-' + CAST(@MONTH_PERIOD AS nvarchar) + '-1') AS DATA,
			R.SOURCE, 0,0,NULL, @YEAR_PERIOD AS [YEAR PERIOD], @MONTH_PERIOD, 'SELL OUT', mstr.CHANNEL,bmstr.ID AS BRAND, @TRANSACTION_ID, @USER,
			CURRENT_TIMESTAMP
			FROM ROSETTA_LOADER AS R 
			INNER JOIN BRAND_MASTER AS bmstr ON bmstr.ID = R.[BRAND ID] AND bmstr.MARKET = R.[MARKET ID]
			INNER JOIN MARKET_MASTER AS mstr ON mstr.ID = R.[MARKET ID]
			WHERE NOT EXISTS(
			SELECT 1 FROM STRWM_BOY_DATA AS S WHERE S.[MARKET] = R.[MARKET ID] AND S.[BRAND] = R.[BRAND ID] AND S.[YEAR PERIOD] = @YEAR_PERIOD AND S.[MONTH PERIOD] = @MONTH_PERIOD 
			AND TYPE = 'SELL OUT');

			UPDATE B SET B.INT = 0, B.BTG = 0
						FROM STRWM_BOY_DATA AS B
						WHERE B.[YEAR PERIOD] = @YEAR_PERIOD AND [MONTH PERIOD] = @MONTH_PERIOD
						AND EXISTS
						(SELECT 1 FROM STRWM_BOY_DATA AS S WHERE S.MARKET = B.MARKET AND S.BRAND = B.BRAND AND S.[YEAR PERIOD] = B.[YEAR PERIOD] AND S.[MONTH PERIOD] = B.[MONTH PERIOD] AND S.TYPE = B.TYPE AND B.INT IS NULL AND B.BTG IS NULL)
						;
			--Actualizamos PBP del año siguiente en los datos que ya existen
			UPDATE B SET B.PBP = 0
						FROM STRWM_BOY_DATA AS B 
						WHERE B.[YEAR PERIOD] = @YEAR_PERIOD + 1 AND [MONTH PERIOD] = @MONTH_PERIOD
						AND EXISTS(
						SELECT NULL FROM STRWM_BOY_DATA AS S WHERE S.[MARKET] = B.[MARKET] AND S.[BRAND] = B.[BRAND] AND S.[YEAR PERIOD] = B.[YEAR PERIOD] AND S.[MONTH PERIOD] = B.[MONTH PERIOD] AND B.[TYPE] = S.[TYPE] AND B.PBP IS NULL)
						;

			INSERT INTO STRWM_BOY_DATA (MARKET,[GROUP], MARKET_NAME, BRAND_NAME, DATA,[SOURCE], INT, BTG, PBP, [YEAR PERIOD], [MONTH PERIOD], [TYPE], CHANNEL, BRAND, TRANSACTION_ID, [USER], [LAST DATE])
						SELECT mstr.ID, R.[GROUP ID], mstr.NAME, bmstr.NAME, DATENAME(month, CAST(@YEAR_PERIOD +1 AS nvarchar) + '-' + CAST(@MONTH_PERIOD AS nvarchar) + '-1') AS DATA,
						R.SOURCE, NULL, NULL ,0, @YEAR_PERIOD +1 AS [YEAR PERIOD], @MONTH_PERIOD, 'MARKET', mstr.CHANNEL,bmstr.ID AS BRAND, @TRANSACTION_ID, @USER,
						CURRENT_TIMESTAMP
						FROM ROSETTA_LOADER AS R 
						INNER JOIN BRAND_MASTER AS bmstr ON bmstr.ID = R.[BRAND ID] AND bmstr.MARKET = R.[MARKET ID]
						INNER JOIN MARKET_MASTER AS mstr ON mstr.ID = R.[MARKET ID]
						WHERE NOT EXISTS(
						SELECT 1 FROM STRWM_BOY_DATA AS S WHERE S.[MARKET] = R.[MARKET ID] AND S.[BRAND] = R.[BRAND ID] AND S.[YEAR PERIOD] = @YEAR_PERIOD +1 AND S.[MONTH PERIOD] =  @MONTH_PERIOD 
						AND TYPE = 'MARKET')
						UNION
						SELECT mstr.ID, R.[GROUP ID], mstr.NAME, bmstr.NAME, DATENAME(month, CAST(@YEAR_PERIOD +1 AS nvarchar) + '-' + CAST(@MONTH_PERIOD AS nvarchar) + '-1') AS DATA,
						R.SOURCE, NULL,NULL,0, @YEAR_PERIOD +1 AS [YEAR PERIOD], @MONTH_PERIOD, 'SELL IN', mstr.CHANNEL,bmstr.ID AS BRAND, @TRANSACTION_ID, @USER,
						CURRENT_TIMESTAMP
						FROM ROSETTA_LOADER AS R 
						INNER JOIN BRAND_MASTER AS bmstr ON bmstr.ID = R.[BRAND ID] AND bmstr.MARKET = R.[MARKET ID]
						INNER JOIN MARKET_MASTER AS mstr ON mstr.ID = R.[MARKET ID]
						WHERE NOT EXISTS(
						SELECT 1 FROM STRWM_BOY_DATA AS S WHERE S.[MARKET] = R.[MARKET ID] AND S.[BRAND] = R.[BRAND ID] AND S.[YEAR PERIOD] = @YEAR_PERIOD + 1 AND S.[MONTH PERIOD] = @MONTH_PERIOD 
						AND TYPE = 'SELL IN')
						UNION
						SELECT mstr.ID, R.[GROUP ID], mstr.NAME, bmstr.NAME, DATENAME(month, CAST(@YEAR_PERIOD + 1 AS nvarchar) + '-' + CAST(@MONTH_PERIOD AS nvarchar) + '-1') AS DATA,
						R.SOURCE, NULL,NULL,0, @YEAR_PERIOD + 1 AS [YEAR PERIOD], @MONTH_PERIOD, 'SELL OUT', mstr.CHANNEL,bmstr.ID AS BRAND, @TRANSACTION_ID, @USER,
						CURRENT_TIMESTAMP
						FROM ROSETTA_LOADER AS R 
						INNER JOIN BRAND_MASTER AS bmstr ON bmstr.ID = R.[BRAND ID] AND bmstr.MARKET = R.[MARKET ID]
						INNER JOIN MARKET_MASTER AS mstr ON mstr.ID = R.[MARKET ID]
						WHERE NOT EXISTS(
						SELECT 1 FROM STRWM_BOY_DATA AS S WHERE S.[MARKET] = R.[MARKET ID] AND S.[BRAND] = R.[BRAND ID] AND S.[YEAR PERIOD] = @YEAR_PERIOD + 1 AND S.[MONTH PERIOD] = @MONTH_PERIOD 
						AND TYPE = 'SELL OUT');

			--Ejecutamos el stored procedure
			SET @MESSAGE = 'Execute BOYs SP';
			EXEC sp_BOY_TABLES_LOADER @YEAR_PERIOD = @YEAR_PERIOD, @MONTH_PERIOD = @MONTH_PERIOD, @USER = @USER, @TRANSACTION_ID = @TRANSACTION_ID; 
		END
		END TRY
		BEGIN CATCH
			IF(@@TRANCOUNT >0)
			BEGIN
				ROLLBACK TRANSACTION NTS_TRANS;
				BEGIN TRANSACTION LOG_TRANS;
				INSERT INTO dbo.LOG_TABLE ([TRANSACTION ID],MESSAGE,[TYPE], [ERROR MESSAGE]) VALUES(@TRANSACTION_ID, 'Executing ' + @PROCEDURE + ' procedure...','Error',@MESSAGE);
				COMMIT TRANSACTION LOG_TRANS;
				THROW;
			END
		END CATCH
		--FETCH PER INTO @YEAR_PERIOD,@MONTH_PERIOD
		--;
		--SET @FETCH_PER = @@FETCH_STATUS
		--;
		OPEN TMP_DATA;
		FETCH TMP_DATA INTO @CHANNEL, @MARKET, @BRAND, @NTS_CFG;
		SET @FETCH_TMP = @@FETCH_STATUS;
	END;
	IF @TRANSACTION_COUNT = 0
		BEGIN
			RAISERROR('No data found in TMP_NTS_DATA',11,1)
			;
		END
	;
	BEGIN TRANSACTION UPD_PY_TRANS;
	BEGIN TRY
		--Actualizamos los datos YTD_PY y MONTH_PY en la tabla temporal con datos de este año si existen en la definitiva y no hay en la temporal.
		SET @MESSAGE = 'Update YTD_AMOUNT_PY, MONTH_AMOUNT_PY';
		BEGIN TRANSACTION LOG_TRANS;
		INSERT INTO dbo.LOG_TABLE ([TRANSACTION ID],MESSAGE,[TYPE]) VALUES(@TRANSACTION_ID, @MESSAGE,'Running');
		COMMIT TRANSACTION LOG_TRANS;
		UPDATE t 
		SET t.YTD_AMOUNT_PY = (SELECT SUM(t2.YTD_AMOUNT_ACTUAL) FROM dbo.STRWM_NTS_DATA AS t2 WHERE t2.CHANNEL = t.CHANNEL AND t2.BRAND = t.BRAND AND t2.MARKET = t.MARKET AND t2.[MONTH PERIOD] = t.[MONTH PERIOD] AND t2.[YEAR PERIOD] = t.[YEAR PERIOD] -1)
		FROM dbo.STRWM_NTS_DATA AS t
		WHERE t.YTD_AMOUNT_PY IS NULL
		;
		UPDATE t 
		SET t.MONTH_AMOUNT_PY = (SELECT SUM(t2.MONTH_AMOUNT_ACTUAL) FROM dbo.STRWM_NTS_DATA AS t2 WHERE t2.CHANNEL = t.CHANNEL AND t2.BRAND = t.BRAND AND t2.MARKET = t.MARKET AND t2.[MONTH PERIOD] = t.[MONTH PERIOD] AND t2.[YEAR PERIOD] = t.[YEAR PERIOD] -1)
		FROM dbo.STRWM_NTS_DATA AS t
		WHERE t.MONTH_AMOUNT_PY IS NULL
		;
		IF (@@TRANCOUNT>0) 
		BEGIN
			COMMIT TRANSACTION UPD_PY_TRANS;
			CLOSE PER;

		END
		;
	END TRY
	BEGIN CATCH
		IF(@@TRANCOUNT >0)
		BEGIN
			ROLLBACK TRANSACTION UPD_PY_TRANS;
			BEGIN TRANSACTION LOG_TRANS;
			INSERT INTO dbo.LOG_TABLE([TRANSACTION ID],MESSAGE,[TYPE], [ERROR MESSAGE]) VALUES(@TRANSACTION_ID, 'Executing ' + @PROCEDURE + ' procedure...','Error',@MESSAGE);
			COMMIT TRANSACTION LOG_TRANS;
			CLOSE PER;
			THROW;
		END
	END CATCH
END








GO


