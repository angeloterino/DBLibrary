@model StrawmanApp.Models.StrawmanDataModel
@using GridMvc.Html;
@if(Model.brand != null){
@Html.Grid((List<StrawmanApp.Entities.StrwmanPreviewBrandData>)Model.brand, new GridRenderOptions { GridName = "brand" }).Columns(columns =>
           {
               columns.Add(foo => foo.DESCRIPTION).Titled("DESCRIPTION").Sortable(true);
               columns.Add(foo => foo.TOTAL).Titled("TOTAL").Sortable(true);
               columns.Add(foo => foo.MONTH).Titled("MONTH").Sortable(true);
               columns.Add(foo => foo.YTD).Titled("YTD").Sortable(true);
               columns.Add(foo => foo.MAT).Titled("MAT").Sortable(true);
               columns.Add().Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(o => @<button type="button" data-type="edit" data-target-market="@o.MARKET" data-target-brand="@o.BRAND" class="btn btn-default">Edit</button>);
           }).WithPaging(20)
}
@if(Model.market!=null){
@Html.Grid((List<StrawmanApp.Entities.StrwmanPreviewMarketData>)Model.market, new GridRenderOptions { GridName = "market" }).Columns(columns =>
           {
               columns.Add(foo => foo.DESCRIPTION).Titled("DESCRIPTION").Sortable(true);
               columns.Add(foo => foo.TOTAL).Titled("TOTAL").Sortable(true);
               columns.Add(foo => foo.MONTH).Titled("MONTH").Sortable(true);
               columns.Add(foo => foo.YTD).Titled("YTD").Sortable(true);
               columns.Add(foo => foo.MAT).Titled("MAT").Sortable(true);
               columns.Add().Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(o => @<button type="button" data-type="edit" data-target-market="@o.MARKET" data-target-brand="" class="btn btn-default">Edit</button>);
           }).WithPaging(20)
}