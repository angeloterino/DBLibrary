@model List<StrawmanApp.Models.MasterDataModels>
@using GridMvc.Html;    
@Html.Grid((List<StrawmanApp.Models.MasterDataModels>)Model).Columns(columns =>
    {
        columns.Add(foo => foo.market_name).Encoded(false).Sanitized(false).RenderValueAs(o => Html.TextBoxFor(m => o.market_name, new { @class = "form-control" }).ToHtmlString());
        columns.Add(foo => foo.brand_name).Encoded(false).Sanitized(false).RenderValueAs(o => Html.TextBoxFor(m => o.brand_name, new { @class = "form-control" }).ToHtmlString()); ;
        columns.Add(foo => foo.group).Encoded(false).Sanitized(false).RenderValueAs(o => Html.DropDownListFor(m => o.group, new SelectList(o.group_list, "Value", "Text", o.group),new { @class = "form-control"}).ToHtmlString());
        columns.Add(foo => foo.channel).Encoded(false).Sanitized(false).RenderValueAs(o => Html.DropDownListFor(m => o.channel, new SelectList(o.channel_list, "Value", "Text", o.channel),new { @class = "form-control"}).ToHtmlString());
        columns.Add(foo => foo.source);
        columns.Add().Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(o => @<button class="btn btn-danger" type="submit" data-type="save" data-target-market="@o.id" data-target-brand="@o.brand" data-target-channel="@o.channel" class="btn btn-default">Save</button>);
    }).Selectable(true)