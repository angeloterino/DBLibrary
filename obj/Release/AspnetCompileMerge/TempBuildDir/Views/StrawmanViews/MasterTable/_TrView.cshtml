@model StrawmanApp.Models.StrwawmanTrViewModel
@{
    //Atributos de fila:
    //  _styleView: Vista para renderizar los estilos de la fila
    //  _sytleData: Datos para renderizar los estilos de la fila
    //  _rowClass: clase de la fila
    //  _rowAttr: atributos definidos en la fila (id, width, height...)
    //
    //Atributos de columna:
    //  _colData: Datos a pintar en cada columna
    //  _colType: Tipo de dato (atributo data-type)
    //  _colStyle: Estilos de cada columna (si viene definido uno se repetie el mismo)
    //  _colAttr: atributos definidos en la columna (id, width, height...)
    
    string _styleView = (Model.styleView != null) ? Model.styleView.ToString() : null;
    ViewDataDictionary _styleData = (_styleView != null)?Model.styleData:null;
    string _rowClass = (Model._class != null) ? Model._class.ToString() : "grid-row";
    string _rowAttr = (Model._attr != null) ? Model._attr.ToString() : null;
    string[] _colData = (Model._colData != null)?(string[])Model._colData:null;
    string[] _colType = (Model._colType != null)?(string[])Model._colType:null;
    string[] _colStyle = (Model._colStyle != null)?(string[])Model._colStyle: new string[]{""};
    string[] _colAttr = (Model._colAttr != null) ? (string[])Model._colAttr : new string[]{""};
    string _type = "", _style ="", _attr = "";
    
}
<tr class="@_rowClass" @_rowAttr @if(_styleView != null){Html.RenderPartial("~/Views/StrawmanViews/MasterTable/"+_styleView+".cshtml", _styleData);}>
    @{for(int i = 0;i <_colData.Length; i++){
          if (i < _colType.Length) { _type = "data-type=\"" + _colType[i] + "\" "; }
          _type += "" + "data-value=\"" + _colData[i].ToString().Replace(".","") + "\" ";
          if (i < _colStyle.Length) { _style = _colStyle[i]; }
          if (i < _colAttr.Length) { _attr = _type + " " + _colAttr[i]; }
          else { _attr = _type; }
          Html.RenderPartial("~/Views/StrawmanViews/MasterTable/_TdView.cshtml", new ViewDataDictionary { { "style", _style }, { "data", _colData[i] }, { "type", _type }, { "attr", _attr } });
          
        }
    }
</tr>