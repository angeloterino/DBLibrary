@model List<StrawmanApp.Entities.LETTERS_COMMENT_DATA>
@{
    decimal? channel_id;
    List<StrawmanApp.Entities.v_WRK_MONTHLY_COMMENTS_DATA> data = ViewBag.CommentsData;
    string style_red = StrawmanApp.Helpers.StrawmanConstants.Colors.Red;
    string table_id =  "";
    string user = ViewBag.CurrentUser;
    string edit_action = ViewBag.EditAction;
    string update_action = ViewBag.UpdateAction;
    foreach (StrawmanApp.Entities.v_WRK_MONTHLY_COMMENTS_DATA main_data in data)
    {
        table_id = "comments" + main_data.CHANNEL.ToString();
    <table class="table" id="table_@table_id" style="display:table; margin-top:20px;">
        <tbody>   
        <tr>
            <td class="table-cell" style="display:table-cell;font-weight:bold;color:@style_red;">
                    @Html.DisplayFor(m => main_data.NAME)
            </td>   
        </tr> 
        <tr class="table-row" style="display:table-row; ">
            <td class="table-cell" style="display:table-cell;" >
            <div select-id ="container_@table_id" target-url = "@update_action" class="comment-container">    
        @{channel_id = 0;
          List<StrawmanApp.Entities.LETTERS_COMMENT_DATA> letters = Model.Where(m => m.LETTER_ID == main_data.CHANNEL).ToList();
          foreach (StrawmanApp.Entities.LETTERS_COMMENT_DATA item in letters)
          {
            bool own = (item.USER == user);
            if (item.COMMENT != null)
            {
                <p>@Html.DisplayFor(m => item.COMMENT)</p>
            }
            else
            {
                <p>&nbsp;</p>
            }
            channel_id = item.LETTER_ID;
          }
          } </div>
            </td>
        </tr>
        </tbody>       
    </table>
        }
}
