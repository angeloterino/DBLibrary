@model List<StrawmanApp.Entities.v_WRK_MANAGEMENT_LETTERS>
@{
    string channel_name = "";
    List<StrawmanApp.Entities.v_WRK_MANAGEMENT_LETTERS> lst1 = Model.Where(m => m.MAIN_GROUP == 1).Select(m => m).ToList();
    List<StrawmanApp.Entities.v_WRK_MANAGEMENT_LETTERS> lst2 = Model.Where(m => m.MAIN_GROUP == 2).Select(m => m).ToList();
    List<StrawmanApp.Entities.v_WRK_MANAGEMENT_LETTERS> lst3 = Model.Where(m => m.MAIN_GROUP == 0).Select(m => m).ToList();
    List<StrawmanApp.Entities.LETTERS_COMMENT_DATA> data = ViewBag.LettersData;
    string style_red = StrawmanApp.Helpers.StrawmanConstants.Colors.Red;

    <table class="table" id="letters1" style="display:table">
        <tbody> 
            <tr class="table-row" style="display:table-row">
                <td class="table-cell" style="display:table-cell; font-weight:bold;text-align:center;border-bottom-color:transparent;">
                    @Html.DisplayFor(m => lst1.FirstOrDefault().COUNTRY)
                </td>
                <td class="table-cell" style="display:table-cell; font-weight:bold;color:@style_red" colspan="3">
                    @Html.DisplayFor(m => lst1.FirstOrDefault().MAIN_NAME)
                </td>
            </tr>            
        @{channel_name = "";
        foreach(StrawmanApp.Entities.v_WRK_MANAGEMENT_LETTERS item in lst1){
            string border_transparent = "";
            if (lst1.IndexOf(item) != lst1.Count - 1)
            {
                border_transparent = "border-bottom-color:transparent;";
            }            
            List<StrawmanApp.Entities.LETTERS_COMMENT_DATA> letters = data.Where(m => m.LETTER_ID == item.GROUP_ID).Select(m=>m).ToList();
               
            <tr class="table-row" style="display:table-row">
                <td class="table-cell" style="display:table-cell;width:60px;@border_transparent">
                        &nbsp;
                </td>
                @if (channel_name != item.CHANNEL_NAME)
                {
                    <td class="table-cell" style="display:table-cell;width:90px;border-bottom-color:transparent;font-weight:bold;color:@style_red;">
                        @Html.DisplayFor(m => item.CHANNEL_NAME)
                    </td>
                }else{
                    if (lst1.IndexOf(item) != lst1.Count - 1 && channel_name != lst1[lst1.IndexOf(item) + 1].CHANNEL_NAME)
                    {
                        border_transparent = "";
                    }
                    <td class="table-cell" style="display:table-cell;@border_transparent">
                        &nbsp;
                    </td>
                }
                <td class="table-cell" style="display:table-cell; width:140px">
                    @Html.DisplayFor(m => item.NAME)
                </td>
                <td class="table-cell" style="display:table-cell">
                    <div class="comment-wrapper" style="position:relative;" data-letter-id="@item.GROUP_ID.ToString()" data-target="@StrawmanApp.Entities.CommentTypes.MANAGEMENT_LETTER" data-value-name="@Html.DisplayFor(m => item.NAME)">
                        <div class="comment-container">
                            @if (letters != null)
                            {
                                foreach(StrawmanApp.Entities.LETTERS_COMMENT_DATA letter in letters){
                                    @Html.Raw(letter.COMMENT)
                                }
                            }
                            else
                            {
                        
                                <span>&nbsp;</span>
                            }
                        </div>
                     </div>
                </td>
            </tr>
       
                    channel_name = item.CHANNEL_NAME;
        }
        } 
        <tr><td class="table-cell" style="display:table-cell;border-color:transparent;" colspan="4">&nbsp;</td></tr>
        </tbody>
    </table>
    <table class="table" id ="letters2" style="display:table">
        <tbody>   
            <tr class="table-row" style="display:table-row">
                <td class="table-cell" style="display:table-cell;font-weight:bold;text-align:center;border-bottom-color:transparent;">
                    @Html.DisplayFor(m => lst2.FirstOrDefault().COUNTRY)
                </td>
                <td class="table-cell" style="display:table-cell;font-weight:bold;color:@style_red" colspan="3">
                    @Html.DisplayFor(m => lst2.FirstOrDefault().MAIN_NAME)
                </td>
            </tr>            
        @{channel_name = "";
          foreach (StrawmanApp.Entities.v_WRK_MANAGEMENT_LETTERS item in lst2)
          {
              string border_transparent = "";
              if (lst2.IndexOf(item) != lst2.Count - 1)
              {
                  border_transparent = "border-bottom-color:transparent;";
              }              
              List<StrawmanApp.Entities.LETTERS_COMMENT_DATA> letters = data.Where(m => m.LETTER_ID == item.GROUP_ID).Select(m=>m).ToList();
                          
            <tr class="table-row" style="display:table-row">
                <td class="table-cell" style="display:table-cell;width:60px;@border_transparent">
                        &nbsp;
                </td>
                @if (channel_name != item.CHANNEL_NAME)
                {
                    <td class="table-cell" style="display:table-cell;width:90px;border-bottom-color:transparent;font-weight:bold;color:@style_red;">
                        @Html.DisplayFor(m => item.CHANNEL_NAME)
                    </td>
                }
                else
                {
                    if (lst2.IndexOf(item) != lst2.Count - 1 && channel_name != lst2[lst2.IndexOf(item) + 1].CHANNEL_NAME)
                    {
                        border_transparent = "";
                    }
                    <td class="table-cell" style="display:table-cell;@border_transparent">
                        &nbsp;
                    </td>
                }
                <td class="table-cell" style="display:table-cell;width:140px;">
                    @Html.DisplayFor(m => item.NAME)
                </td>
                <td class="table-cell" style="display:table-cell">
                    <div class="comment-wrapper" style="position:relative;" data-letter-id="@item.GROUP_ID.ToString()" data-target="@StrawmanApp.Entities.CommentTypes.MANAGEMENT_LETTER" data-value-name="@Html.DisplayFor(m => item.NAME)">
                        <div class="comment-container">
                            @if (letters != null)
                            {
                                foreach(StrawmanApp.Entities.LETTERS_COMMENT_DATA letter in letters){
                                    @Html.Raw(letter.COMMENT);
                                }
                            }
                            else
                            {
                        
                            <span>&nbsp;</span>
                            }
                        </div>
                    </div>
                </td>
            </tr>
        
                    channel_name = item.CHANNEL_NAME;
          }
        }
        <tr><td class="table-cell" style="display:table-cell;border-color:transparent;" colspan="4">&nbsp;</td></tr>
        </tbody>
    </table>
    <table class="table" id="letters0" style="display:table">
        <tbody>
            <tr class="table-row" style="display:table-row">
                <td class="table-cell" style="display:table-cell;font-weight:bold;text-align:center; border-bottom-color:transparent;">
                    @Html.DisplayFor(m => lst3.FirstOrDefault().COUNTRY)
                </td>
                <td class="table-cell" style="display:table-cell;font-weight:bold;color:@style_red">
                    @Html.DisplayFor(m => lst3.FirstOrDefault().CHANNEL_NAME)
                </td>
            </tr>            
        @{channel_name = lst3.FirstOrDefault().CHANNEL_NAME;
          foreach (StrawmanApp.Entities.v_WRK_MANAGEMENT_LETTERS item in lst3)
          {
            string border_transparent = "";
            if(lst3.IndexOf(item) != lst3.Count -1){
                border_transparent = "border-bottom-color:transparent;";
            }
            List<StrawmanApp.Entities.LETTERS_COMMENT_DATA> letters = data.Where(m => m.LETTER_ID == item.GROUP_ID).Select(m=>m).ToList();
            <tr class="table-row" style="display:table-row; ">
            <td class="table-cell" style="display:table-cell;width:60px;@border_transparent">&nbsp;</td>                        
            @if (channel_name != item.CHANNEL_NAME)
            {

                <td class="table-cell" style="display:table-cell;font-weight:bold;color:@style_red;">
                    @Html.DisplayFor(m => item.CHANNEL_NAME)
                </td>                
            }
            else
            {
            <td class="table-cell" style="display:table-cell">
                <div class="comment-wrapper" style="position:relative;" data-letter-id="@item.GROUP_ID.ToString()" data-target="@StrawmanApp.Entities.CommentTypes.MANAGEMENT_LETTER" data-value-name="@Html.DisplayFor(m => item.NAME)">
                <span style="font-weight:bold">@Html.DisplayFor(m => item.NAME):</span><br />
                    <div class="comment-container">
                    @if (letters != null)
                    {   
                        foreach(StrawmanApp.Entities.LETTERS_COMMENT_DATA letter in letters){
                            @Html.Raw(letter.COMMENT)
                        }
                    }
                    else
                    {
                        
                    <span>&nbsp;</span>
                    }
                    </div>
                </div>
            </td>            
            }             
            </tr>
            
            channel_name = item.CHANNEL_NAME;
          }
          } 
        </tbody>       
    </table>
}
